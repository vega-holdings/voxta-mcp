{
  "tools": [
    {
      "name": "notion-notion_append_block_children",
      "description": "Append new children blocks to a specified parent block in Notion. Requires insert content capabilities. You can optionally specify the 'after' parameter to append after a certain block.",
      "parameters": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "The ID of the parent block.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          },
          "children": {
            "type": "array",
            "description": "Array of block objects to append. Each block must follow the Notion block schema.",
            "items": {
              "type": "object",
              "description": "A Notion block object.",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "Should be 'block'.",
                  "enum": [
                    "block"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Type of the block. Possible values include 'paragraph', 'heading_1', 'heading_2', 'heading_3', 'bulleted_list_item', 'numbered_list_item', 'to_do', 'toggle', 'child_page', 'child_database', 'embed', 'callout', 'quote', 'equation', 'divider', 'table_of_contents', 'column', 'column_list', 'link_preview', 'synced_block', 'template', 'link_to_page', 'audio', 'bookmark', 'breadcrumb', 'code', 'file', 'image', 'pdf', 'video'. Not all types are supported for creation via API."
                },
                "paragraph": {
                  "type": "object",
                  "description": "Paragraph block object.",
                  "properties": {
                    "rich_text": {
                      "type": "object",
                      "description": "A rich text object.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of this rich text object. Possible values: text, mention, equation.",
                          "enum": [
                            "text",
                            "mention",
                            "equation"
                          ]
                        },
                        "text": {
                          "type": "object",
                          "description": "Object containing text content and optional link info. Required if type is 'text'.",
                          "properties": {
                            "content": {
                              "type": "string",
                              "description": "The actual text content."
                            },
                            "link": {
                              "type": "object",
                              "description": "Optional link object with a 'url' field.",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "description": "The URL the text links to."
                                }
                              }
                            }
                          }
                        },
                        "mention": {
                          "type": "object",
                          "description": "Mention object if type is 'mention'. Represents an inline mention of a database, date, link preview, page, template mention, or user.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "The type of the mention.",
                              "enum": [
                                "database",
                                "date",
                                "link_preview",
                                "page",
                                "template_mention",
                                "user"
                              ]
                            },
                            "database": {
                              "type": "object",
                              "description": "Database mention object. Contains a database reference with an 'id' field.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the mentioned database.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            },
                            "date": {
                              "type": "object",
                              "description": "Date mention object, containing a date property value object.",
                              "properties": {
                                "start": {
                                  "type": "string",
                                  "description": "An ISO 8601 formatted start date or date-time."
                                },
                                "end": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "description": "An ISO 8601 formatted end date or date-time, or null if not a range."
                                },
                                "time_zone": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "description": "Time zone information for start and end. If null, times are in UTC."
                                }
                              },
                              "required": [
                                "start"
                              ]
                            },
                            "link_preview": {
                              "type": "object",
                              "description": "Link Preview mention object, containing a URL for the link preview.",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "description": "The URL for the link preview."
                                }
                              },
                              "required": [
                                "url"
                              ]
                            },
                            "page": {
                              "type": "object",
                              "description": "Page mention object, containing a page reference with an 'id' field.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the mentioned page.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            },
                            "template_mention": {
                              "type": "object",
                              "description": "Template mention object, can be a template_mention_date or template_mention_user.",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "template_mention_date",
                                    "template_mention_user"
                                  ],
                                  "description": "The template mention type."
                                },
                                "template_mention_date": {
                                  "type": "string",
                                  "enum": [
                                    "today",
                                    "now"
                                  ],
                                  "description": "For template_mention_date type, the date keyword."
                                },
                                "template_mention_user": {
                                  "type": "string",
                                  "enum": [
                                    "me"
                                  ],
                                  "description": "For template_mention_user type, the user keyword."
                                }
                              }
                            },
                            "user": {
                              "type": "object",
                              "description": "User mention object, contains a user reference.",
                              "properties": {
                                "object": {
                                  "type": "string",
                                  "description": "Should be 'user'.",
                                  "enum": [
                                    "user"
                                  ]
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the user.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
                                }
                              },
                              "required": [
                                "object",
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "oneOf": [
                            {
                              "required": [
                                "database"
                              ]
                            },
                            {
                              "required": [
                                "date"
                              ]
                            },
                            {
                              "required": [
                                "link_preview"
                              ]
                            },
                            {
                              "required": [
                                "page"
                              ]
                            },
                            {
                              "required": [
                                "template_mention"
                              ]
                            },
                            {
                              "required": [
                                "user"
                              ]
                            }
                          ]
                        },
                        "equation": {
                          "type": "object",
                          "description": "Equation object if type is 'equation'. Represents an inline LaTeX equation.",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "description": "LaTeX string representing the inline equation."
                            }
                          },
                          "required": [
                            "expression"
                          ]
                        },
                        "annotations": {
                          "type": "object",
                          "description": "Styling information for the text.",
                          "properties": {
                            "bold": {
                              "type": "boolean"
                            },
                            "italic": {
                              "type": "boolean"
                            },
                            "strikethrough": {
                              "type": "boolean"
                            },
                            "underline": {
                              "type": "boolean"
                            },
                            "code": {
                              "type": "boolean"
                            },
                            "color": {
                              "type": "string",
                              "description": "Color for the text.",
                              "enum": [
                                "default",
                                "blue",
                                "blue_background",
                                "brown",
                                "brown_background",
                                "gray",
                                "gray_background",
                                "green",
                                "green_background",
                                "orange",
                                "orange_background",
                                "pink",
                                "pink_background",
                                "purple",
                                "purple_background",
                                "red",
                                "red_background",
                                "yellow",
                                "yellow_background"
                              ]
                            }
                          }
                        },
                        "href": {
                          "type": "string",
                          "description": "The URL of any link or mention in this text, if any."
                        },
                        "plain_text": {
                          "type": "string",
                          "description": "The plain text without annotations."
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "color": {
                      "type": "string",
                      "description": "The color of the block.",
                      "enum": [
                        "default",
                        "blue",
                        "blue_background",
                        "brown",
                        "brown_background",
                        "gray",
                        "gray_background",
                        "green",
                        "green_background",
                        "orange",
                        "orange_background",
                        "pink",
                        "pink_background",
                        "purple",
                        "purple_background",
                        "red",
                        "red_background",
                        "yellow",
                        "yellow_background"
                      ]
                    },
                    "children": {
                      "type": "array",
                      "description": "Nested child blocks.",
                      "items": {
                        "type": "object",
                        "description": "A nested block object."
                      }
                    }
                  }
                }
              },
              "required": [
                "object",
                "type"
              ]
            }
          },
          "after": {
            "type": "string",
            "description": "The ID of the existing block that the new block should be appended after.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          }
        },
        "required": [
          "block_id",
          "children"
        ]
      }
    },
    {
      "name": "notion-notion_retrieve_block",
      "description": "Retrieve a block from Notion",
      "parameters": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "The ID of the block to retrieve.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          }
        },
        "required": [
          "block_id"
        ]
      }
    },
    {
      "name": "notion-notion_retrieve_block_children",
      "description": "Retrieve the children of a block",
      "parameters": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "The ID of the block.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          },
          "start_cursor": {
            "type": "string",
            "description": "Pagination cursor for next page of results"
          },
          "page_size": {
            "type": "number",
            "description": "Number of results per page (max 100)"
          }
        },
        "required": [
          "block_id"
        ]
      }
    },
    {
      "name": "notion-notion_delete_block",
      "description": "Delete a block in Notion",
      "parameters": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "The ID of the block to delete.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          }
        },
        "required": [
          "block_id"
        ]
      }
    },
    {
      "name": "notion-notion_retrieve_page",
      "description": "Retrieve a page from Notion",
      "parameters": {
        "type": "object",
        "properties": {
          "page_id": {
            "type": "string",
            "description": "The ID of the page to retrieve.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          }
        },
        "required": [
          "page_id"
        ]
      }
    },
    {
      "name": "notion-notion_update_page_properties",
      "description": "Update properties of a page or an item in a Notion database",
      "parameters": {
        "type": "object",
        "properties": {
          "page_id": {
            "type": "string",
            "description": "The ID of the page or database item to update.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          },
          "properties": {
            "type": "object",
            "description": "Properties to update. These correspond to the columns or fields in the database."
          }
        },
        "required": [
          "page_id",
          "properties"
        ]
      }
    },
    {
      "name": "notion-notion_list_all_users",
      "description": "List all users in the Notion workspace. **Note:** This function requires upgrading to the Notion Enterprise plan and using an Organization API key to avoid permission errors.",
      "parameters": {
        "type": "object",
        "properties": {
          "start_cursor": {
            "type": "string",
            "description": "Pagination start cursor for listing users"
          },
          "page_size": {
            "type": "number",
            "description": "Number of users to retrieve (max 100)"
          }
        }
      }
    },
    {
      "name": "notion-notion_retrieve_user",
      "description": "Retrieve a specific user by user_id in Notion. **Note:** This function requires upgrading to the Notion Enterprise plan and using an Organization API key to avoid permission errors.",
      "parameters": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "The ID of the user to retrieve.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          }
        },
        "required": [
          "user_id"
        ]
      }
    },
    {
      "name": "notion-notion_retrieve_bot_user",
      "description": "Retrieve the bot user associated with the current token in Notion",
      "parameters": {
        "type": "object",
        "properties": {}
      }
    },
    {
      "name": "notion-notion_create_database",
      "description": "Create a database in Notion",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "object",
            "description": "Parent object of the database"
          },
          "title": {
            "type": "array",
            "description": "Title of database as it appears in Notion. An array of rich text objects.",
            "items": {
              "type": "object",
              "description": "A rich text object.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of this rich text object. Possible values: text, mention, equation.",
                  "enum": [
                    "text",
                    "mention",
                    "equation"
                  ]
                },
                "text": {
                  "type": "object",
                  "description": "Object containing text content and optional link info. Required if type is 'text'.",
                  "properties": {
                    "content": {
                      "type": "string",
                      "description": "The actual text content."
                    },
                    "link": {
                      "type": "object",
                      "description": "Optional link object with a 'url' field.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The URL the text links to."
                        }
                      }
                    }
                  }
                },
                "mention": {
                  "type": "object",
                  "description": "Mention object if type is 'mention'. Represents an inline mention of a database, date, link preview, page, template mention, or user.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the mention.",
                      "enum": [
                        "database",
                        "date",
                        "link_preview",
                        "page",
                        "template_mention",
                        "user"
                      ]
                    },
                    "database": {
                      "type": "object",
                      "description": "Database mention object. Contains a database reference with an 'id' field.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the mentioned database.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "date": {
                      "type": "object",
                      "description": "Date mention object, containing a date property value object.",
                      "properties": {
                        "start": {
                          "type": "string",
                          "description": "An ISO 8601 formatted start date or date-time."
                        },
                        "end": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "An ISO 8601 formatted end date or date-time, or null if not a range."
                        },
                        "time_zone": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Time zone information for start and end. If null, times are in UTC."
                        }
                      },
                      "required": [
                        "start"
                      ]
                    },
                    "link_preview": {
                      "type": "object",
                      "description": "Link Preview mention object, containing a URL for the link preview.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The URL for the link preview."
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "page": {
                      "type": "object",
                      "description": "Page mention object, containing a page reference with an 'id' field.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the mentioned page.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "template_mention": {
                      "type": "object",
                      "description": "Template mention object, can be a template_mention_date or template_mention_user.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "template_mention_date",
                            "template_mention_user"
                          ],
                          "description": "The template mention type."
                        },
                        "template_mention_date": {
                          "type": "string",
                          "enum": [
                            "today",
                            "now"
                          ],
                          "description": "For template_mention_date type, the date keyword."
                        },
                        "template_mention_user": {
                          "type": "string",
                          "enum": [
                            "me"
                          ],
                          "description": "For template_mention_user type, the user keyword."
                        }
                      }
                    },
                    "user": {
                      "type": "object",
                      "description": "User mention object, contains a user reference.",
                      "properties": {
                        "object": {
                          "type": "string",
                          "description": "Should be 'user'.",
                          "enum": [
                            "user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the user.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
                        }
                      },
                      "required": [
                        "object",
                        "id"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "oneOf": [
                    {
                      "required": [
                        "database"
                      ]
                    },
                    {
                      "required": [
                        "date"
                      ]
                    },
                    {
                      "required": [
                        "link_preview"
                      ]
                    },
                    {
                      "required": [
                        "page"
                      ]
                    },
                    {
                      "required": [
                        "template_mention"
                      ]
                    },
                    {
                      "required": [
                        "user"
                      ]
                    }
                  ]
                },
                "equation": {
                  "type": "object",
                  "description": "Equation object if type is 'equation'. Represents an inline LaTeX equation.",
                  "properties": {
                    "expression": {
                      "type": "string",
                      "description": "LaTeX string representing the inline equation."
                    }
                  },
                  "required": [
                    "expression"
                  ]
                },
                "annotations": {
                  "type": "object",
                  "description": "Styling information for the text.",
                  "properties": {
                    "bold": {
                      "type": "boolean"
                    },
                    "italic": {
                      "type": "boolean"
                    },
                    "strikethrough": {
                      "type": "boolean"
                    },
                    "underline": {
                      "type": "boolean"
                    },
                    "code": {
                      "type": "boolean"
                    },
                    "color": {
                      "type": "string",
                      "description": "Color for the text.",
                      "enum": [
                        "default",
                        "blue",
                        "blue_background",
                        "brown",
                        "brown_background",
                        "gray",
                        "gray_background",
                        "green",
                        "green_background",
                        "orange",
                        "orange_background",
                        "pink",
                        "pink_background",
                        "purple",
                        "purple_background",
                        "red",
                        "red_background",
                        "yellow",
                        "yellow_background"
                      ]
                    }
                  }
                },
                "href": {
                  "type": "string",
                  "description": "The URL of any link or mention in this text, if any."
                },
                "plain_text": {
                  "type": "string",
                  "description": "The plain text without annotations."
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "properties": {
            "type": "object",
            "description": "Property schema of database. The keys are the names of properties as they appear in Notion and the values are property schema objects."
          }
        },
        "required": [
          "parent",
          "properties"
        ]
      }
    },
    {
      "name": "notion-notion_query_database",
      "description": "Query a database in Notion",
      "parameters": {
        "type": "object",
        "properties": {
          "database_id": {
            "type": "string",
            "description": "The ID of the database to query.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          },
          "filter": {
            "type": "object",
            "description": "Filter conditions"
          },
          "sorts": {
            "type": "array",
            "description": "Sort conditions"
          },
          "start_cursor": {
            "type": "string",
            "description": "Pagination cursor for next page of results"
          },
          "page_size": {
            "type": "number",
            "description": "Number of results per page (max 100)"
          }
        },
        "required": [
          "database_id"
        ]
      }
    },
    {
      "name": "notion-notion_retrieve_database",
      "description": "Retrieve a database in Notion",
      "parameters": {
        "type": "object",
        "properties": {
          "database_id": {
            "type": "string",
            "description": "The ID of the database to retrieve.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          }
        },
        "required": [
          "database_id"
        ]
      }
    },
    {
      "name": "notion-notion_update_database",
      "description": "Update a database in Notion",
      "parameters": {
        "type": "object",
        "properties": {
          "database_id": {
            "type": "string",
            "description": "The ID of the database to update.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          },
          "title": {
            "type": "array",
            "description": "An array of rich text objects that represents the title of the database that is displayed in the Notion UI.",
            "items": {
              "type": "object",
              "description": "A rich text object.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of this rich text object. Possible values: text, mention, equation.",
                  "enum": [
                    "text",
                    "mention",
                    "equation"
                  ]
                },
                "text": {
                  "type": "object",
                  "description": "Object containing text content and optional link info. Required if type is 'text'.",
                  "properties": {
                    "content": {
                      "type": "string",
                      "description": "The actual text content."
                    },
                    "link": {
                      "type": "object",
                      "description": "Optional link object with a 'url' field.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The URL the text links to."
                        }
                      }
                    }
                  }
                },
                "mention": {
                  "type": "object",
                  "description": "Mention object if type is 'mention'. Represents an inline mention of a database, date, link preview, page, template mention, or user.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the mention.",
                      "enum": [
                        "database",
                        "date",
                        "link_preview",
                        "page",
                        "template_mention",
                        "user"
                      ]
                    },
                    "database": {
                      "type": "object",
                      "description": "Database mention object. Contains a database reference with an 'id' field.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the mentioned database.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "date": {
                      "type": "object",
                      "description": "Date mention object, containing a date property value object.",
                      "properties": {
                        "start": {
                          "type": "string",
                          "description": "An ISO 8601 formatted start date or date-time."
                        },
                        "end": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "An ISO 8601 formatted end date or date-time, or null if not a range."
                        },
                        "time_zone": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Time zone information for start and end. If null, times are in UTC."
                        }
                      },
                      "required": [
                        "start"
                      ]
                    },
                    "link_preview": {
                      "type": "object",
                      "description": "Link Preview mention object, containing a URL for the link preview.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The URL for the link preview."
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "page": {
                      "type": "object",
                      "description": "Page mention object, containing a page reference with an 'id' field.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the mentioned page.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "template_mention": {
                      "type": "object",
                      "description": "Template mention object, can be a template_mention_date or template_mention_user.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "template_mention_date",
                            "template_mention_user"
                          ],
                          "description": "The template mention type."
                        },
                        "template_mention_date": {
                          "type": "string",
                          "enum": [
                            "today",
                            "now"
                          ],
                          "description": "For template_mention_date type, the date keyword."
                        },
                        "template_mention_user": {
                          "type": "string",
                          "enum": [
                            "me"
                          ],
                          "description": "For template_mention_user type, the user keyword."
                        }
                      }
                    },
                    "user": {
                      "type": "object",
                      "description": "User mention object, contains a user reference.",
                      "properties": {
                        "object": {
                          "type": "string",
                          "description": "Should be 'user'.",
                          "enum": [
                            "user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the user.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
                        }
                      },
                      "required": [
                        "object",
                        "id"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "oneOf": [
                    {
                      "required": [
                        "database"
                      ]
                    },
                    {
                      "required": [
                        "date"
                      ]
                    },
                    {
                      "required": [
                        "link_preview"
                      ]
                    },
                    {
                      "required": [
                        "page"
                      ]
                    },
                    {
                      "required": [
                        "template_mention"
                      ]
                    },
                    {
                      "required": [
                        "user"
                      ]
                    }
                  ]
                },
                "equation": {
                  "type": "object",
                  "description": "Equation object if type is 'equation'. Represents an inline LaTeX equation.",
                  "properties": {
                    "expression": {
                      "type": "string",
                      "description": "LaTeX string representing the inline equation."
                    }
                  },
                  "required": [
                    "expression"
                  ]
                },
                "annotations": {
                  "type": "object",
                  "description": "Styling information for the text.",
                  "properties": {
                    "bold": {
                      "type": "boolean"
                    },
                    "italic": {
                      "type": "boolean"
                    },
                    "strikethrough": {
                      "type": "boolean"
                    },
                    "underline": {
                      "type": "boolean"
                    },
                    "code": {
                      "type": "boolean"
                    },
                    "color": {
                      "type": "string",
                      "description": "Color for the text.",
                      "enum": [
                        "default",
                        "blue",
                        "blue_background",
                        "brown",
                        "brown_background",
                        "gray",
                        "gray_background",
                        "green",
                        "green_background",
                        "orange",
                        "orange_background",
                        "pink",
                        "pink_background",
                        "purple",
                        "purple_background",
                        "red",
                        "red_background",
                        "yellow",
                        "yellow_background"
                      ]
                    }
                  }
                },
                "href": {
                  "type": "string",
                  "description": "The URL of any link or mention in this text, if any."
                },
                "plain_text": {
                  "type": "string",
                  "description": "The plain text without annotations."
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "description": {
            "type": "array",
            "description": "An array of rich text objects that represents the description of the database that is displayed in the Notion UI."
          },
          "properties": {
            "type": "object",
            "description": "The properties of a database to be changed in the request, in the form of a JSON object."
          }
        },
        "required": [
          "database_id"
        ]
      }
    },
    {
      "name": "notion-notion_create_database_item",
      "description": "Create a new item (page) in a Notion database",
      "parameters": {
        "type": "object",
        "properties": {
          "database_id": {
            "type": "string",
            "description": "The ID of the database to add the item to.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          },
          "properties": {
            "type": "object",
            "description": "Properties of the new database item. These should match the database schema."
          }
        },
        "required": [
          "database_id",
          "properties"
        ]
      }
    },
    {
      "name": "notion-notion_create_comment",
      "description": "Create a comment in Notion. This requires the integration to have 'insert comment' capabilities. You can either specify a page parent or a discussion_id, but not both.",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "object",
            "description": "Parent object that specifies the page to comment on. Must include a page_id if used.",
            "properties": {
              "page_id": {
                "type": "string",
                "description": "The ID of the page to comment on.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
              }
            }
          },
          "discussion_id": {
            "type": "string",
            "description": "The ID of an existing discussion thread to add a comment to.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          },
          "rich_text": {
            "type": "array",
            "description": "Array of rich text objects representing the comment content.",
            "items": {
              "type": "object",
              "description": "A rich text object.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of this rich text object. Possible values: text, mention, equation.",
                  "enum": [
                    "text",
                    "mention",
                    "equation"
                  ]
                },
                "text": {
                  "type": "object",
                  "description": "Object containing text content and optional link info. Required if type is 'text'.",
                  "properties": {
                    "content": {
                      "type": "string",
                      "description": "The actual text content."
                    },
                    "link": {
                      "type": "object",
                      "description": "Optional link object with a 'url' field.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The URL the text links to."
                        }
                      }
                    }
                  }
                },
                "mention": {
                  "type": "object",
                  "description": "Mention object if type is 'mention'. Represents an inline mention of a database, date, link preview, page, template mention, or user.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the mention.",
                      "enum": [
                        "database",
                        "date",
                        "link_preview",
                        "page",
                        "template_mention",
                        "user"
                      ]
                    },
                    "database": {
                      "type": "object",
                      "description": "Database mention object. Contains a database reference with an 'id' field.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the mentioned database.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "date": {
                      "type": "object",
                      "description": "Date mention object, containing a date property value object.",
                      "properties": {
                        "start": {
                          "type": "string",
                          "description": "An ISO 8601 formatted start date or date-time."
                        },
                        "end": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "An ISO 8601 formatted end date or date-time, or null if not a range."
                        },
                        "time_zone": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Time zone information for start and end. If null, times are in UTC."
                        }
                      },
                      "required": [
                        "start"
                      ]
                    },
                    "link_preview": {
                      "type": "object",
                      "description": "Link Preview mention object, containing a URL for the link preview.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The URL for the link preview."
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "page": {
                      "type": "object",
                      "description": "Page mention object, containing a page reference with an 'id' field.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the mentioned page.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "template_mention": {
                      "type": "object",
                      "description": "Template mention object, can be a template_mention_date or template_mention_user.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "template_mention_date",
                            "template_mention_user"
                          ],
                          "description": "The template mention type."
                        },
                        "template_mention_date": {
                          "type": "string",
                          "enum": [
                            "today",
                            "now"
                          ],
                          "description": "For template_mention_date type, the date keyword."
                        },
                        "template_mention_user": {
                          "type": "string",
                          "enum": [
                            "me"
                          ],
                          "description": "For template_mention_user type, the user keyword."
                        }
                      }
                    },
                    "user": {
                      "type": "object",
                      "description": "User mention object, contains a user reference.",
                      "properties": {
                        "object": {
                          "type": "string",
                          "description": "Should be 'user'.",
                          "enum": [
                            "user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the user.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
                        }
                      },
                      "required": [
                        "object",
                        "id"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "oneOf": [
                    {
                      "required": [
                        "database"
                      ]
                    },
                    {
                      "required": [
                        "date"
                      ]
                    },
                    {
                      "required": [
                        "link_preview"
                      ]
                    },
                    {
                      "required": [
                        "page"
                      ]
                    },
                    {
                      "required": [
                        "template_mention"
                      ]
                    },
                    {
                      "required": [
                        "user"
                      ]
                    }
                  ]
                },
                "equation": {
                  "type": "object",
                  "description": "Equation object if type is 'equation'. Represents an inline LaTeX equation.",
                  "properties": {
                    "expression": {
                      "type": "string",
                      "description": "LaTeX string representing the inline equation."
                    }
                  },
                  "required": [
                    "expression"
                  ]
                },
                "annotations": {
                  "type": "object",
                  "description": "Styling information for the text.",
                  "properties": {
                    "bold": {
                      "type": "boolean"
                    },
                    "italic": {
                      "type": "boolean"
                    },
                    "strikethrough": {
                      "type": "boolean"
                    },
                    "underline": {
                      "type": "boolean"
                    },
                    "code": {
                      "type": "boolean"
                    },
                    "color": {
                      "type": "string",
                      "description": "Color for the text.",
                      "enum": [
                        "default",
                        "blue",
                        "blue_background",
                        "brown",
                        "brown_background",
                        "gray",
                        "gray_background",
                        "green",
                        "green_background",
                        "orange",
                        "orange_background",
                        "pink",
                        "pink_background",
                        "purple",
                        "purple_background",
                        "red",
                        "red_background",
                        "yellow",
                        "yellow_background"
                      ]
                    }
                  }
                },
                "href": {
                  "type": "string",
                  "description": "The URL of any link or mention in this text, if any."
                },
                "plain_text": {
                  "type": "string",
                  "description": "The plain text without annotations."
                }
              },
              "required": [
                "type"
              ]
            }
          }
        },
        "required": [
          "rich_text"
        ]
      }
    },
    {
      "name": "notion-notion_retrieve_comments",
      "description": "Retrieve a list of unresolved comments from a Notion page or block. Requires the integration to have 'read comment' capabilities.",
      "parameters": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "The ID of the block or page whose comments you want to retrieve.It should be a 32-character string (excluding hyphens) formatted as 8-4-4-4-12 with hyphens (-)."
          },
          "start_cursor": {
            "type": "string",
            "description": "If supplied, returns a page of results starting after the cursor."
          },
          "page_size": {
            "type": "number",
            "description": "Number of comments to retrieve (max 100)."
          }
        },
        "required": [
          "block_id"
        ]
      }
    },
    {
      "name": "notion-notion_search",
      "description": "Search pages or databases by title in Notion",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Text to search for in page or database titles"
          },
          "filter": {
            "type": "object",
            "description": "Filter results by object type (page or database)",
            "properties": {
              "property": {
                "type": "string",
                "description": "Must be 'object'"
              },
              "value": {
                "type": "string",
                "description": "Either 'page' or 'database'"
              }
            }
          },
          "sort": {
            "type": "object",
            "description": "Sort order of results",
            "properties": {
              "direction": {
                "type": "string",
                "enum": [
                  "ascending",
                  "descending"
                ]
              },
              "timestamp": {
                "type": "string",
                "enum": [
                  "last_edited_time"
                ]
              }
            }
          },
          "start_cursor": {
            "type": "string",
            "description": "Pagination start cursor"
          },
          "page_size": {
            "type": "number",
            "description": "Number of results to return (max 100)"
          }
        }
      }
    },
    {
      "name": "filesystem-read_file",
      "description": "Read the complete contents of a file from the file system. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Only works within allowed directories.",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        },
        "required": [
          "path"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "filesystem-read_multiple_files",
      "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.",
      "parameters": {
        "type": "object",
        "properties": {
          "paths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "paths"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "filesystem-write_file",
      "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "path",
          "content"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "filesystem-edit_file",
      "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "edits": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "oldText": {
                  "type": "string",
                  "description": "Text to search for - must match exactly"
                },
                "newText": {
                  "type": "string",
                  "description": "Text to replace with"
                }
              },
              "required": [
                "oldText",
                "newText"
              ],
              "additionalProperties": false
            }
          },
          "dryRun": {
            "type": "boolean",
            "default": false,
            "description": "Preview changes using git-style diff format"
          }
        },
        "required": [
          "path",
          "edits"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "filesystem-create_directory",
      "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        },
        "required": [
          "path"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "filesystem-list_directory",
      "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        },
        "required": [
          "path"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "filesystem-directory_tree",
      "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        },
        "required": [
          "path"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "filesystem-move_file",
      "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.",
      "parameters": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          }
        },
        "required": [
          "source",
          "destination"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "filesystem-search_files",
      "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          },
          "excludePatterns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        },
        "required": [
          "path",
          "pattern"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "filesystem-get_file_info",
      "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        },
        "required": [
          "path"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "filesystem-list_allowed_directories",
      "description": "Returns the list of directories that this server is allowed to access. Use this to understand which directories are available before trying to access files.",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": []
      }
    }
  ]
}